{
    "title": "SAX Battery",
    "config": {
        "abort": {
            "already_configured": "Device is already configured",
            "unknown": "Unknown configuration error occurred"
        },
        "error": {
            "cannot_connect": "Failed to connect to battery",
            "invalid_auth": "Invalid authentication",
            "invalid_host": "Invalid IP address or hostname",
            "invalid_host_format": "Invalid host format - must be valid IPv4 address or hostname",
            "invalid_port": "Invalid port number - must be between 1 and 65535",
            "invalid_master": "Selected master battery is not configured",
            "invalid_min_soc": "Minimum SOC must be between 0 and 100",
            "invalid_interval": "Update interval must be between 5 and 300 seconds",
            "unknown": "Unexpected error"
        },
        "step": {
            "user": {
                "title": "SAX Battery Configuration",
                "description": "Set up your SAX Battery system to integrate with Home Assistant.",
                "data": {
                    "battery_count": "Select your number of batteries (1 to 3)"
                }
            },
            "control_options": {
                "title": "Control Options",
                "description": "Configure how you want Home Assistant to interact with your SAX Battery system. You can continue without selecting any of these options, this will just add the sensors. The added options here require you to contact SAX's customer service.",
                "data": {
                    "pilot_from_ha": "Control battery from Home Assistant replacing the SAX smartmeter (you need registers 41 and 42 set to write)",
                    "limit_power": "Enable power limitations (you need registers 43 and 44 to be writable). Once setup, you can create automations that send the proper values to this number entity with your own rules"
                },
                "data_description": {
                    "pilot_from_ha": "Enable pilot mode to control battery power (registers 41, 42)",
                    "limit_power": "Enable power limits to set max charge/discharge (registers 43, 44)"
                }
            },
            "pilot_options": {
                "title": "Battery Control Settings",
                "description": "Configure advanced battery control parameters when Home Assistant is managing your battery system.",
                "data": {
                    "min_soc": "Minimum State of Charge (%)",
                    "auto_pilot_interval": "Control Update Interval (seconds), 60 seconds should be enough"
                }
            },
            "sensors": {
                "title": "Power Monitoring Sensors",
                "description": "Select the sensors that monitor your home's power usage for intelligent battery control.",
                "data": {
                    "grid_power_sensor": "Grid Power Sensor (required for power manager)",
                    "power_sensor": "Power Consumption Sensor, in Watts, a negative value means consuming from the grid and positive value equals injection into the grid",
                    "pf_sensor": "Power Factor Sensor, called cos(phi) or PF"
                },
                "data_description": {
                    "grid_power_sensor": "Select grid power sensor for power manager (required)",
                    "power_sensor": "Select smart meter power sensor (optional, for legacy pilot)",
                    "pf_sensor": "Select power factor sensor (optional, for legacy pilot)"
                }
            },
            "priority_devices": {
                "title": "Priority Devices Setup",
                "description": "Select devices that will get priority over the battery. If power above 50W is detected battery will neither charge nor discharge. This is typically an EV charger.",
                "data": {
                    "priority_devices": "Priority Devices, if enabled, battery will not discharge or charge"
                },
                "data_description": {
                    "priority_devices": "Select devices that should have priority over battery usage (e.g., EV charger, heat pump)"
                }
            },
            "battery_config": {
                "title": "Battery Connection Settings",
                "description": "Configure network settings for {battery_count} SAX batteries. Battery A→L1, Battery B→L2, Battery C→L3",
                "data": {
                    "battery_a_host": "Battery A IP Address",
                    "battery_a_port": "Battery A Port",
                    "battery_b_host": "Battery B IP Address",
                    "battery_b_port": "Battery B Port",
                    "battery_c_host": "Battery C IP Address",
                    "battery_c_port": "Battery C Port",
                    "master_battery": "Master Battery"
                },
                "data_description": {
                    "battery_a_host": "IP address or hostname for Battery A",
                    "battery_a_port": "Modbus TCP port for Battery A (default: 502)",
                    "battery_b_host": "IP address or hostname for Battery B",
                    "battery_b_port": "Modbus TCP port for Battery B (default: 502)",
                    "battery_c_host": "IP address or hostname for Battery C",
                    "battery_c_port": "Modbus TCP port for Battery C (default: 502)",
                    "master_battery": "Select which battery acts as master (polls smart meter)"
                }
            }
        }
    },
    "options": {
        "step": {
            "init": {
                "title": "SAX Battery Options",
                "description": "Update your SAX Battery configuration settings.",
                "data": {
                    "pilot_from_ha": "Control battery from Home Assistant",
                    "limit_power": "Enable power limitations",
                    "min_soc": "Minimum State of Charge (%)",
                    "auto_pilot_interval": "Control Update Interval (seconds)",
                    "enable_solar_charging": "Enable Solar Charging"
                },
                "data_description": {
                    "pilot_from_ha": "Enable or disable pilot mode (registers 41,42)",
                    "limit_power": "Enable or disable power limits (registers 43,44)",
                    "min_soc": "Minimum battery charge level (0-100%)",
                    "auto_pilot_interval": "How often to update power setpoint (5-300 seconds)",
                    "enable_solar_charging": "Enable solar charging mode for zero grid balance"
                }
            }
        }
    },
    "device": {
        "dev_bms": {
            "name": "Battery Management System"
        },
        "dev_bess": {
            "name": "Battery Energy Storage System"
        },
        "dev_sm": {
            "name": "Smart Meter"
        }
    },
    "entity": {
        "number": {
            "bms_max_charge": {
                "name": "Max Charge"
            },
            "bms_max_discharge": {
                "name": "Max Discharge"
            },
            "bms_min_soc": {
                "name": "Minimum SOC"
            },
            "bms_nominal_factor": {
                "name": "Power Factor (cos φ)"
            },
            "bms_nominal_power": {
                "name": "Nominal Power"
            },
            "bms_pilot_power": {
                "name": "Pilot Power"
            }
        },
        "sensor": {
            "bess_capacity": {
                "name": "Capacity"
            },
            "bess_cycles": {
                "name": "Cycles"
            },
            "bess_power": {
                "name": "Power"
            },
            "bess_power_sm": {
                "name": "Power Smartmeter"
            },
            "bess_soc": {
                "name": "SOC"
            },
            "bess_temperature": {
                "name": "Temperature"
            },
            "bms_ac_power_total": {
                "name": "AC Power Total"
            },
            "bms_apparent_power": {
                "name": "Apparent Power"
            },
            "bms_combined_soc": {
                "name": "Combined SOC"
            },
            "bms_cumulative_energy_consumed": {
                "name": "Cumulative Energy Consumed"
            },
            "bms_cumulative_energy_produced": {
                "name": "Cumulative Energy Produced"
            },
            "bms_current_l1": {
                "name": "Current L1"
            },
            "bms_current_l2": {
                "name": "Current L2"
            },
            "bms_current_l3": {
                "name": "Current L3"
            },
            "bms_grid_frequency": {
                "name": "Grid Frequency"
            },
            "bms_phase_currents_sum": {
                "name": "Phase Currents Sum"
            },
            "bms_power_factor": {
                "name": "Power Factor"
            },
            "bms_reactive_power": {
                "name": "Reactive Power"
            },
            "bms_voltage_l1": {
                "name": "Voltage L1"
            },
            "bms_voltage_l2": {
                "name": "Voltage L2"
            },
            "bms_voltage_l3": {
                "name": "Voltage L3"
            },
            "sm_current_l1": {
                "name": "Current L1"
            },
            "sm_current_l2": {
                "name": "Current L2"
            },
            "sm_current_l3": {
                "name": "Current L3"
            },
            "sm_energy_consumed": {
                "name": "Energy Consumed"
            },
            "sm_energy_produced": {
                "name": "Energy Produced"
            },
            "sm_power_l1": {
                "name": "Active Power L1"
            },
            "sm_power_l2": {
                "name": "Active Power L2"
            },
            "sm_power_l3": {
                "name": "Active Power L3"
            },
            "sm_switching_state": {
                "name": "Switching State"
            },
            "sm_total_power": {
                "name": "Total Power"
            },
            "sm_voltage_l1": {
                "name": "Voltage L1"
            },
            "sm_voltage_l2": {
                "name": "Voltage L2"
            },
            "sm_voltage_l3": {
                "name": "Voltage L3"
            }
        },
        "switch": {
            "bess_status": {
                "name": "Battery Status",
                "state": {
                    "off": "Off",
                    "on": "On"
                },
                "state_attributes": {
                    "detailed_state": {
                        "state": {
                            "unknown": "Unknown",
                            "off": "Off",
                            "on": "On",
                            "standby": "Standby",
                            "connected": "Connected"
                        }
                    }
                }
            },
            "bms_solar_charging": {
                "name": "Solar Charging",
                "state": {
                    "off": "Disabled",
                    "on": "Enabled"
                },
                "state_attributes": {
                    "mode_conflict": {
                        "name": "Mode Conflict",
                        "state": {
                            "none": "No conflict",
                            "manual_disabled": "Manual control was disabled",
                            "solar_disabled": "Solar charging was disabled"
                        }
                    }
                }
            },
            "bms_manual_control": {
                "name": "Manual Control",
                "state": {
                    "off": "Disabled",
                    "on": "Enabled"
                },
                "state_attributes": {
                    "mode_conflict": {
                        "name": "Mode Conflict",
                        "state": {
                            "none": "No conflict",
                            "solar_disabled": "Solar charging was disabled",
                            "manual_disabled": "Manual control was disabled"
                        }
                    }
                }
            }
        }
    }
}
